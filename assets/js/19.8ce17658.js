(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{366:function(s,a,t){"use strict";t.r(a);var n=t(43),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"vue-react项目中不可忽视的自动化部署方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-react项目中不可忽视的自动化部署方案"}},[s._v("#")]),s._v(" vue/react项目中不可忽视的自动化部署方案")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/190422/1-1Z4221K20V94.gif",alt:""}})]),s._v(" "),t("p",[s._v("本文主要介绍shell脚本的一些基本用法以及在前端项目中的应用。将围绕以下几点来展开：")]),s._v(" "),t("ol",[t("li",[s._v("shell基本用法（变量，循环，传参，运算符，流程控制等）")]),s._v(" "),t("li",[s._v("使用shell脚本自动将项目打包部署到git服务器")]),s._v(" "),t("li",[s._v("使用nodeJs编写命令行工具")])]),s._v(" "),t("h3",{attrs:{id:"_1-shell基本介绍及用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-shell基本介绍及用法"}},[s._v("#")]),s._v(" 1. shell基本介绍及用法")]),s._v(" "),t("blockquote",[t("p",[s._v("Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁，业界所说的 shell 通常都是指 shell 脚本，Shell 编程跟 java、php 编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了。Linux 的 Shell 种类众多，在这里我们介绍一种常用且开源免费的shell——bash。")])]),s._v(" "),t("ol",[t("li",[s._v("Shell 变量")])]),s._v(" "),t("p",[s._v("变量声明如下：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("time"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])])]),t("p",[s._v("注：变量名和等号之间不能有空格，变量名命名规则如下：")]),s._v(" "),t("ul",[t("li",[s._v("命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。")]),s._v(" "),t("li",[s._v("中间不能有空格，可以使用下划线（_）。")]),s._v(" "),t("li",[s._v("不能使用标点符号。")]),s._v(" "),t("li",[s._v("不能使用bash里的关键字（可用help命令查看保留关键字）")])]),s._v(" "),t("p",[s._v("我们可以通过如下方式使用变量：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xn213"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者这样")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${name}")]),s._v("\n")])])]),t("p",[s._v("我们能使用如下方式删除变量：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" name\n")])])]),t("p",[s._v("关于shell变量的更多用法，可以参考linux官网，这里就不过多介绍了。")]),s._v(" "),t("ol",[t("li",[s._v("Shell 传递参数")])]),s._v(" "),t("blockquote",[t("p",[s._v("我们可以在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。n 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二个参数，以此类推,其中 $0 为执行的文件名")])]),s._v(" "),t("p",[s._v("使用如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"文件名：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数一：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数二：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数三：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出")]),s._v("\n文件名：./test.sh\n参数一：1\n参数二：2\n参数三：3\n")])])]),t("ol",[t("li",[s._v("Shell 数组")])]),s._v(" "),t("p",[s._v('Bash Shell 只支持一维数组，数组元素的下标由0开始。Shell 数组用括号来表示，元素用"空格"符号分割开，例如：')]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("names")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". namen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("我们可以通过如下方式读取数组：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${names"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n")])])]),t("p",[s._v("我们可以使用@ 或 * 可以获取数组中的所有元素，例如：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"数组的元素为: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${nsmes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出为")]),s._v("\n数组的元素为: A B C D\n")])])]),t("ol",[t("li",[s._v("Shell 基本运算符")])]),s._v(" "),t("p",[s._v("Shell支持多种运算符，如下：")]),s._v(" "),t("ul",[t("li",[s._v("算数运算符")]),s._v(" "),t("li",[s._v("关系运算符")]),s._v(" "),t("li",[s._v("布尔运算符")]),s._v(" "),t("li",[s._v("字符串运算符")]),s._v(" "),t("li",[s._v("文件测试运算符")])]),s._v(" "),t("p",[s._v("原生bash不支持简单的数学运算，但是可以通过其他命令来实现，这里我们使用expr。它是一款表达式计算工具，使用它能完成表达式的求值操作。\n例如：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("total")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"两数之和为 : '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$total")]),s._v('"')]),s._v("\n")])])]),t("p",[s._v("注：这里我们使用反引号``。由于命令行工具这块用的比较少，如果感兴趣，大家可以去官网了解学习。")]),s._v(" "),t("ol",[t("li",[s._v("Shell echo命令")])]),s._v(" "),t("p",[s._v("Shell 的 echo 指令与 PHP 的 echo 指令类似，都是用于字符串的输出，这里我们着重介绍与用户交互的输入输出。")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" name\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v('"')]),s._v("\n")])])]),t("p",[s._v("read 命令从标准输入中读取一行,并把输入行的每个字段的值指定给 shell 变量。当我们执行脚本后，输入一个自定义名称，按下回车将输出 'hello xxx',我们是不是想到了vue脚手架中的一些命令呢，是的，我们可以用这个方法去实现自己的脚手架配置或者自动生成项目模版。")]),s._v(" "),t("p",[s._v("我们也可以用echo将显示结果定向至文件：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"It is mine"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.js\n")])])]),t("p",[s._v("执行 这个文件后将为我们创建一个test.js文件，并将输出内容写入test.js。")]),s._v(" "),t("ol",[t("li",[s._v("Shell test 命令")])]),s._v(" "),t("p",[s._v("test 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试。")]),s._v(" "),t("p",[s._v("数值测试：")]),s._v(" "),t("ul",[t("li",[s._v("-eq 等于则为真")]),s._v(" "),t("li",[s._v("-ne 不等于则为真")]),s._v(" "),t("li",[s._v("-gt 大于则为真")]),s._v(" "),t("li",[s._v("-ge 大于等于则为真")]),s._v(" "),t("li",[s._v("-lt 小于则为真")]),s._v(" "),t("li",[s._v("-le 小于等于则为真")])]),s._v(" "),t("p",[s._v("使用方式如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -eq $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'相等！'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'不相等！'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("运行脚本后将输出'相等!'。")]),s._v(" "),t("p",[s._v("字符串测试：")]),s._v(" "),t("ul",[t("li",[s._v("= 等于则为真")]),s._v(" "),t("li",[s._v("!= 不相等则为真")]),s._v(" "),t("li",[s._v("-z 字符串 字符串的长度为零则为真")]),s._v(" "),t("li",[s._v("-n 字符串 字符串的长度不为零则为真")])]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xu"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xu"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'两个字符串相等!'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'两个字符串不相等!'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("ol",[t("li",[s._v("Shell 流程控制")])]),s._v(" "),t("p",[s._v("流程控制我们主要介绍if else， if else-if else和for循环。")]),s._v(" "),t("ul",[t("li",[s._v("if else")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 条件1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  命令操作1\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  命令操作2\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("ul",[t("li",[s._v("if else-if else")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a 等于 b"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -gt "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a 大于 b"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -lt "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a 小于 b"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"无"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("ul",[t("li",[s._v("for 循环")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 一般格式\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a1 a2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" aN\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  命令"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  命令"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n  命令"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("N")]),s._v("\ndone\n")])])]),t("p",[s._v("在了解完如上知识点后，我们来看看这些能做些什么。")]),s._v(" "),t("h3",{attrs:{id:"_2-使用shell脚本自动将项目打包部署到git服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用shell脚本自动将项目打包部署到git服务器"}},[s._v("#")]),s._v(" 2. 使用shell脚本自动将项目打包部署到git服务器")]),s._v(" "),t("ol",[t("li",[s._v("一个git提交的例子")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xj--'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提交时只需要执行 bash git.sh '参数内容'即可完成提交操作")]),s._v("\n")])])]),t("p",[s._v("首先，我们在项目根目录下新建一个git.sh文件，输入以上脚本，保存，然后我们后面要提交代码时，只需要执行 bash git.sh '你的注释'，就可以将代码提交到服务器上了，是不是简化了我们提交的步骤呢")]),s._v(" "),t("ol",[t("li",[s._v("vue项目部署")])]),s._v(" "),t("p",[s._v("我在"),t("a",{attrs:{href:"https://juejin.im/post/5d1782eaf265da1ba91592fc",target:"_blank",rel:"noopener noreferrer"}},[s._v("一张图教你快速玩转vue-cli3"),t("OutboundLink")],1),s._v("这篇文章中教大家了如何独立配置项目，文章末尾有写到部署的方式，如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env sh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当发生错误时中止脚本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd 到构建输出的目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" dist\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f git@bitbucket.org:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("USERNAME"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("USERNAME"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".bitbucket.io.git master\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])])]),t("p",[s._v("在学完shell脚本后，是不是觉得豁然开朗了呢。如果有更复杂的需求，我们可以用同样的方式去部署。")]),s._v(" "),t("h3",{attrs:{id:"_3-使用nodejs编写命令行工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用nodejs编写命令行工具"}},[s._v("#")]),s._v(" 3.使用nodeJs编写命令行工具")]),s._v(" "),t("p",[s._v("我们这里使用commander来搭建node命令行，接下来我会给出最基本的用法，下一篇文章将专门来给大家讲解如何搭建一个高可用的node命令行工具，在此之前，大家可以自由摸索，也许会有更好的方式。")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("// "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".构建项目目录\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" xxx\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" xxx\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" init\n\n// "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".安装commander模块\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" commander --save\n\n// "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".新建bin/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("你自定义的命令行文件名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env node")]),s._v("\n\nvar program "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" require"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'commander'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nprogram.version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.0.1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nprogram\n  .command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'help'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .description"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'显示使用帮助'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .action"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    program.outputHelp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nprogram\n  .command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'create [dir]'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .description"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'创建一个空博客'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .action"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("function"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console.log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'create %s'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nprogram\n  .command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'preview [dir]'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .description"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'实时预览'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .action"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("function"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console.log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'preview %s'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nprogram\n  .command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'build [dir]'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .description"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'生成整站静态HTML'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .option"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-o, --output <dir>'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'生成的静态HTML存放目录'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  .action"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("function"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dir"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console.log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'创建 %s, 输出 %s'")]),s._v(", dir, options.output"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n// 开始解析命令\nprogram.parse"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process.argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n// "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(".在package.json目录下执行关联操作\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v("\n\n// "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(".测试,输入相关命令即可执行对应操作\nxxx "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);